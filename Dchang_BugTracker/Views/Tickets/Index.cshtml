@model IEnumerable<Dchang_BugTracker.Models.Ticket>

@{
    ViewBag.Title = "Index";
}

<style>
.table td, .table th {
        font-size: 9pt;
    }

    .opacity {
        opacity: 0.4;
        filter: alpha(opacity=40);
        zoom: 1;
    }
</style>





<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table Dtable table-head-bg-primary">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.AssignedToUser.FirstName)*@ Developer
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.OwnerUser.FirstName)*@ Submitter
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Project.Name)*@ Project Name
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.TicketPriority.PriorityName)*@ Priority
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.TicketStatus.StatusName)*@ Status
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType.TypeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                Manage
            </th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        var prty = item.TicketPriority.PriorityName;
        var arch = item.TicketStatus.StatusName;
        var none = "badge badge-count";
        var low = "badge badge-low";
        var med = "badge badge-warning";
        var high = "badge badge-orange";
        var urgent = "badge badge-danger";

        if (arch.Contains("Archived") || arch.Contains("Resolved"))
        {
            <tr class="opacity">
                <td>
                    @Html.DisplayFor(modelItem => item.AssignedToUser.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OwnerUser.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Name)
                </td>
                <td>

                    @if (prty.Contains("None"))
                    {
                        <span class="@none">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                    }
                    else if (prty.Contains("Low"))
                    {
                        <span class="@low">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                    }
                    else if (prty.Contains("Medium"))
                    {
                        <span class="@med">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                    }
                    else if (prty.Contains("High"))
                    {
                        <span class="@high">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                    }
                    else if (prty.Contains("Urgent"))
                    {
                        <span class="@urgent">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketStatus.StatusName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketType.TypeName)
                </td>
                <td>
                    <strong>@Html.DisplayFor(modelItem => item.Title)</strong>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                </td>
            </tr>
        }
        else if (arch.Contains("Open") || arch.Contains("Assigned") || arch.Contains("In Progress"))
        { 
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AssignedToUser.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>

                @if (prty.Contains("None"))
                {
                    <span class="@none">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                }
                else if (prty.Contains("Low"))
                {
                    <span class="@low">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                }
                else if (prty.Contains("Medium"))
                {
                    <span class="@med">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                }
                else if (prty.Contains("High"))
                {
                    <span class="@high">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                }
                else if (prty.Contains("Urgent"))
                {
                    <span class="@urgent">@Html.DisplayFor(modelItem => item.TicketPriority.PriorityName)</span>
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.StatusName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.TypeName)
            </td>
            <td>
                <strong>@Html.DisplayFor(modelItem => item.Title)</strong>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                @Html.ActionLink("Assign", "AssignTicket", new { id = item.Id })
            </td>
        </tr>
        }
    }

</table>
