@model Dchang_BugTracker.Models.Ticket
@using Dchang_BugTracker.Models
@using Microsoft.AspNet.Identity
@using Dchang_BugTracker.Helper

@{
    ViewBag.Title = "Ticket Details";
}

<style>
    .ticket_bg {
        background-image: url('../../Images/ticket_bg.jpg');
        background-repeat: no-repeat;
        background-position: top right;
        background-color: #FFFFFF;
    }

    .nav-pills.nav-primary .nav-link.active {
        background: #1572e8;
        background-image: linear-gradient(-135deg, #1f283e, #556385);
        text-shadow: 1px 1px 3px black;
    }

    .ticket-top {
        background-color: #1f283e;
        background-image: linear-gradient(135deg, #1f283e, #556385);
        color: #FFFFFF;
        padding: 30px 5px 5px 5px;
    }

    .ticket-head {
        margin: -5px 5px 0px 15px;
        color: #FFFFFF;
        text-shadow: 1px 1px 3px black;
        font-size: 20pt;
    }

    .ticket-subhead {
        margin: 2px 5px 0px 15px;
        color: #999999;
        font-size: 9pt;
        text-shadow: 1px 1px 3px black;
        text-transform: uppercase;
    }

    .ticket-prop {
        text-align: left;
        line-height: 20px;
        margin: -1px 30px 15px 5px;
        font-size: 9pt;
        text-shadow: 1px 1px 3px black;
        text-transform: none;
    }

    .ticket-type {
        color: aqua;
    }

    .ticket-priority {
        color: #FFFFFF;
        font-size: 9pt;
    }

    .badge {
    }

    .ticket-content-box {
        background-color: #f2f2f2;
        text-align: center;
        font-size: 12px;
        color: #000000;
        padding: 2px 10px 2px 10px;
        border-radius: 5px;
        box-shadow: 5px 5px 2px #556385;
    }

    .ticket-assigned-img {
        border-radius: 15px 15px 15px 15px;
        border: solid #FFFFFF 3px;
        box-shadow: 5px 5px 2px #556385;
        width: 80px;
        height: 80px;
    }

    .comadd {
        background-color: #f2f2f2;
        text-align: left;
        font-size: 12px;
        color: #000000;
    }

    .btn-mrgn {
        margin-top: 3px;
        margin-bottom: 3px;
    }

    .btn:hover {
        background-color: #808caa;
        background-image: linear-gradient(145deg, #c6ccdb, #808caa);
        text-shadow: 1px 1px 3px black;
        border-color: #1f283e;
    }

    .grow {
        transition: all .3s ease-in-out;
    }

        .grow:hover {
            transform: scale(1.2);
        }

    .btn-attach, .btn-attach a:hover, .btn-attach a:hover, .btn-attach a:link, .btn-attach a:active, .btn-attach a:visited {
        color: #1f283e;
        font-size: 9pt;
        text-transform: uppercase;
        text-decoration: none;
    }
</style>

<h4 class="page-title">@ViewBag.Title</h4>


@{
    var db = new ApplicationDbContext();
    var user = db.Users.Find(User.Identity.GetUserId());

    var roleHelper = new RoleHelper();
    var role = roleHelper.ListUserRoles(user.Id).FirstOrDefault();

    var projHelper = new ProjectHelper();
    var proj = projHelper.ListUserProjects(user.Id).FirstOrDefault();


    var none = "badge badge-count";
    var low = "badge badge-low";
    var med = "badge badge-warning";
    var high = "badge badge-orange";
    var urgent = "badge badge-danger";


}

<div class="card">
    <div class="ticket-top">
        <div class="row">
            <div class="col">
                <h2 class="ticket-head">@Html.DisplayFor(model => model.Title)</h2>
                <h4 class="ticket-subhead">Project: @Html.DisplayFor(model => model.Project.Name)</h4>
            </div>
            <div class="col-lg-push-12">
                <h4 class="ticket-prop">
                    <strong>Status:</strong> @Html.DisplayFor(model => model.TicketStatus.StatusName)<BR>
                    <strong>Type:</strong> <span class="ticket-type">@Html.DisplayFor(model => model.TicketType.TypeName)</span><BR>
                    <strong>Priority:</strong>
                    @if (Model.TicketPriority.PriorityName.Contains("None"))
                    {
                        <span class="@none ticket-priority">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span><BR>
                    }
                    else if (Model.TicketPriority.PriorityName.Contains("Low"))
                    {
                        <span class="@low ticket-priority">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span><BR>
                    }
                    else if (Model.TicketPriority.PriorityName.Contains("Medium"))
                    {
                        <span class="@med ticket-priority">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span><BR>
                    }
                    else if (Model.TicketPriority.PriorityName.Contains("High"))
                    {
                        <span class="@high ticket-priority">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span><BR>
                    }
                    else if (Model.TicketPriority.PriorityName.Contains("Urgent"))
                    {
                        <span class="@urgent ticket-priority">@Html.DisplayFor(model => model.TicketPriority.PriorityName)</span><BR>
                    }

                    <strong>Updated:</strong> @Html.DisplayFor(model => model.Updated)
                </h4>
            </div>
        </div>
    </div>
    <div class="card-body ticket_bg">
        <ul class="nav nav-pills nav-primary  nav-pills-no-bd nav-pills-icons justify-content-center" id="pills-tab-with-icon" role="tablist">
            <li class="nav-item submenu">
                <a class="nav-link active show" id="pills-home-tab-icon" data-toggle="pill" href="#pills-home-icon" role="tab" aria-controls="pills-home-icon" aria-selected="true">
                    <i class="flaticon-list grow"></i>
                    Description
                </a>
            </li>
            <li class="nav-item submenu">
                <a class="nav-link" id="pills-comment-tab-icon" data-toggle="pill" href="#pills-comment-icon" role="tab" aria-controls="pills-comment-icon" aria-selected="false">
                    <i class="flaticon-chat-1 grow"></i>
                    Comments
                </a>
            </li>
            <li class="nav-item submenu">
                <a class="nav-link" id="pills-contact-tab-icon" data-toggle="pill" href="#pills-contact-icon" role="tab" aria-controls="pills-contact-icon" aria-selected="false">
                    <i class="flaticon-folder grow"></i>
                    Attachments
                </a>
            </li>
            <li class="nav-item submenu">
                <a class="nav-link" id="pills-history-tab-icon" data-toggle="pill" href="#pills-history-icon" role="tab" aria-controls="pills-history-icon" aria-selected="false">
                    <i class="flaticon-clock-1 grow"></i>
                    History
                </a>
            </li>
        </ul>
        <div class="tab-content mt-2 mb-3" id="pills-with-icon-tabContent">
            <div class="tab-pane fade active show" id="pills-home-icon" role="tabpanel" aria-labelledby="pills-home-tab-icon">

                <div class="col-12">
                    <div class="row container-fluid">
                        <div class="col-8 container-fluid">
                            @Html.DisplayNameFor(model => model.Created) @Html.DisplayFor(model => model.Created)
                            <p>@Html.DisplayFor(model => model.Description)</p>
                        </div>

                        <div class="col-sm-push-2">

                            @if (User.IsInRole("Admin") || User.IsInRole("Demo Admin") || User.IsInRole("Project Manager") || User.IsInRole("Demo Project Manager"))
                            {
                                if (Model.AssignedToUser == null)
                                { }
                                else
                                {
                                    <table>
                                        <tr>
                                            <td rowspan="2">
                                                <img src="@Html.DisplayFor(model => model.AssignedToUser.AvatarPath)" class="ticket-assigned-img" />
                                            </td>
                                            <td style="width:15px"></td>
                                            <td>
                                                <div class="ticket-content-box">
                                                    <strong>@Html.DisplayName("Assigned to")</strong>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td style="width:15px"></td>
                                            <td>
                                                <div class="ticket-content-box">
                                                    @Html.DisplayFor(model => model.AssignedToUser.DisplayName)
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                }
                            }
                            <BR>
                            <table>
                                <tr>
                                    <td rowspan="2">
                                        <img src="@Html.DisplayFor(model => model.OwnerUser.AvatarPath)" class="ticket-assigned-img" />
                                    </td>
                                    <td style="width:15px"></td>
                                    <td>
                                        <div class="ticket-content-box">
                                            <strong>@Html.DisplayName("Submitted by")</strong>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width:15px"></td>
                                    <td>
                                        <div class="ticket-content-box">
                                            @Html.DisplayFor(model => model.OwnerUser.DisplayName)
                                        </div>
                                    </td>
                                </tr>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="pills-comment-icon" role="tabpanel" aria-labelledby="pills-comment-tab-icon">
                @if (Model.TicketStatus.StatusName.Contains("Archived") || Model.TicketStatus.StatusName.Contains("Resolved"))
                {

                }
                else
                {
                    using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("TicketId", Model.Id)
                        <div class="row">
                            <div class="col-3"></div>
                            <div class="col-6">
                                @Html.TextArea("CommentBody", new { rows = 5, cols = 60, placeholder = "Add comment", @class = "form-control comadd" })
                            </div>
                            <div class="col-3"></div>
                        </div>
                        <div class="row">
                            <div class="offset-3 col-md-6">
                                <button type="submit" class="btn btn-sm btn-dark btn-mrgn">Add Comment</button>
                            </div>
                        </div>
                    }
                }

                @foreach (var comment in Model.TicketComments.OrderByDescending(c => c.Created))
                {
                    <div class="container mt-3 compost">
                        <div class="media">
                            <img src="@comment.User.AvatarPath" class="align-self-start mr-3 ticket-assigned-img" style="width:60px; height:60px">
                            <div class="media-body">
                                @comment.Created.ToString("MM/dd/yyyy h:mm tt")<BR>
                                <strong>@comment.User.DisplayName</strong> says:<BR>
                                <p>@comment.CommentBody</p>
                            </div>
                        </div>
                    </div>
                }

            </div>
            <div class="tab-pane fade" id="pills-contact-icon" role="tabpanel" aria-labelledby="pills-contact-tab-icon">
                @if (Model.TicketStatus.StatusName.Contains("Archived") || Model.TicketStatus.StatusName.Contains("Resolved"))
                {

                }
                else
                {
                    using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                    {

                        @Html.AntiForgeryToken()
                        @Html.Hidden("TicketId", Model.Id)


                        <div class="row">
                            <div class="col-3"></div>
                            <div class="col-md-6 align-items-center">
                                @Html.TextBox("attachments", null, new { type = "file", @class = "btn-attach" })
                                <button class="btn btn-sm btn-dark btn-mrgn">Add Attachment</button>
                            </div>
                            <div class="col-3"></div>
                        </div>
                        <div class="row">
                            <div class="col-3"></div>
                            <div class="col-md-6 align-items-center">
                                @Html.TextArea("Description", "", new { rows = 2, cols = 70, placeholder = "Add attachment description", minlength = "1", @class = "form-control comadd" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-3"></div>
                        </div>

                        <BR>

                    }
                }


                @foreach (var item in Model.TicketAttachments.OrderByDescending(c => c.Created))
                {
                    var desc = item.Description;


                    <table class="table table-hover table-head-bg-primary table-striped">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("File")
                                </th>
                                <th>
                                    @Html.DisplayName("Date")
                                </th>
                                <th>
                                    @Html.DisplayName("Description")
                                </th>
                            </tr>
                        </thead>
                        <tr>
                            <td>
                                <a href="@item.FilePath"><img src="@UploadValidator.GetIcon(item.FilePath)" style="width:50px;" /></a>
                            </td>
                            <td>
                                @item.Created.ToString("MM/dd/yyyy 'at' hh:mm tt")
                            </td>
                            <td>
                                @desc
                            </td>
                        </tr>
                    </table>
                }
            </div>
            <div class="tab-pane fade" id="pills-history-icon" role="tabpanel" aria-labelledby="pills-history-tab-icon">
                @foreach (var item in Model.TicketHistories.OrderByDescending(h => h.Changed))
                {


                    <table class="table table-hover table-head-bg-primary table-striped">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("Changed (Property)")
                                </th>
                                <th>
                                    @Html.DisplayName("From")
                                </th>
                                <th>
                                    @Html.DisplayName("To")
                                </th>
                                <th>
                                    @Html.DisplayName("Changed On")
                                </th>
                            </tr>
                        </thead>
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Property)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OldValue)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NewValue)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Changed)
                            </td>
                        </tr>
                    </table>
                }
            </div>
        </div>
        <div>
            <button class="btn-attach">@Html.ActionLink("Back to Ticket Index", "Index")</button>

        </div>
    </div>


</div>






