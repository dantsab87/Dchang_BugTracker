@using Dchang_BugTracker.Models
@using Dchang_BugTracker.Helper
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Dashboard";
}

@{
    var roleHelper = new RoleHelper();
    var projectHelper = new ProjectHelper();
    var db = new ApplicationDbContext();
    var userId = User.Identity.GetUserId();
    var user = db.Users.Find(userId);
    var myRole = roleHelper.ListUserRoles(userId).FirstOrDefault();

}

<style>
    .grow {
        transition: all .3s ease-in-out;
    }

    .grow:hover {
        transform: scale(1.2);
    }
    .txt1 {
        font-size: 13px;
        color: #555555;
        line-height: 2;
        text-transform: none;
    }


</style>



<div class="page-header">
    <h4 class="page-title">@ViewBag.Title</h4>
    @*<ul class="breadcrumbs">
            <li class="nav-home">
                <a href="#">
                    <i class="flaticon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="#">Base</a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="#">Grid System</a>
            </li>
        </ul>*@
</div>




<div class="justify-content-center">

    <div class="align-self-center justify-content-center">
        <div class="card-body">

            <div class="row justify-content-center">
                @if (myRole == "Admin" || myRole == "Demo Admin" || myRole == "Project Manager" || myRole == "Demo Project Manager")
                {
                    <div id="ProjectCount" class="col-sm-6 col-lg-3">
                        <div class="card p-3">
                            <div class="d-flex align-items-center">
                                <span class="stamp stamp-md bg-danger-gradient mr-3">
                                    <i class="far fa-clone grow"></i>
                                </span>
                                <div>
                                    <h5 class="mb-1">
                                        <b>
                                            <a href="@Url.Action("Create","Projects")">
                                                <small>Create a Project</small>
                                            </a>
                                        </b>
                                    </h5>
                                    <small class="text-muted">@db.Projects.Count() Total Projects</small>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div id="TicketCount" class="col-sm-6 col-lg-3">
                        <div class="card p-3">
                            <div class="d-flex align-items-center">
                                <span class="stamp stamp-md bg-secondary-gradient mr-3">
                                    <i class="fas fa-ticket-alt grow"></i>
                                </span>
                                <div>
                                    <h5 class="mb-1">
                                        <b>

                                            <a href="@Url.Action("Index", "Tickets")">
                                                @db.Tickets.Where(t => t.TicketStatus.StatusName.Contains("Open")).Count()
                                                <small>Open Tickets</small>
                                            </a>

                                        </b>
                                    </h5>
                                    <small class="text-muted">
                                        @db.Tickets.Where(t => t.TicketStatus.StatusName.Contains("Open")).Union(
                                        db.Tickets.Where(t => t.TicketStatus.StatusName.Contains("In Progress"))).Union(
                                        db.Tickets.Where(t => t.TicketStatus.StatusName.Contains("Assigned"))).Count()
                                        Active Tickets
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>

                }

                @if (myRole == "Admin" || myRole == "Demo Admin")
                {

                    <div id="UserCount" class="col-sm-6 col-lg-3">
                        <div id="NewUser" class="card p-3">
                            <div class="d-flex align-items-center">
                                <span class="stamp stamp-md bg-success-gradient mr-3">
                                    <i class="fas fa-user-plus grow"></i>
                                </span>
                                <div>
                                    <h5 class="mb-1">
                                        <b>
                                            <a href="@Url.Action("ManageRoles", "Admin")">
                                                @roleHelper.UsersInRole("Unregistered").Count()
                                                <small>New Users</small>
                                            </a>
                                        </b>
                                    </h5>

                                    <small class="text-muted">@db.Users.Count() Total Users</small>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div id="RoleCount" class="col-sm-6 col-lg-3">
                        <div id="AllRoles" class="card p-3" onload="jump()">
                            <div class="d-flex align-items-center txt1">
                                <span class="stamp stamp-md bg-info-gradient mr-3">
                                    <i class="fas fa-users grow"></i>
                                </span>
                                <div>
                                    <span class="mb-1">
                                        <a style="color:#000;" href="@Url.Action("ManageRoles", "Admin")">
                                            <b>@roleHelper.UsersInRole("Admin").Union(roleHelper.UsersInRole("Demo Admin")).Count()</b>
                                            Admin
                                        </a>
                                        &nbsp;&nbsp;
                                        <a style="color:#000;" href="@Url.Action("ManageRoles", "Admin")">
                                            <b>@roleHelper.UsersInRole("Project Manager").Union(roleHelper.UsersInRole("Demo Project Manager")).Count()</b>
                                            Project Managers
                                        </a>
                                        <BR>
                                        <a style="color:#000;" href="@Url.Action("ManageRoles", "Admin")">
                                            <b>@roleHelper.UsersInRole("Developer").Union(roleHelper.UsersInRole("Demo Developer")).Count()</b>
                                            Developers
                                        </a>
                                        &nbsp;&nbsp;
                                        <a style="color:#000;" href="@Url.Action("ManageRoles", "Admin")">
                                            <b>@roleHelper.UsersInRole("Submitter").Union(roleHelper.UsersInRole("Demo Submitter")).Count()</b>
                                            Submitters
                                        </a>
                                        <BR>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>


                }

                @if (User.IsInRole("Developer") || User.IsInRole("Demo Developer") || User.IsInRole("Submitter") || User.IsInRole("Demo Submitter"))
                {
                    <div id="ProjectCount" class="col-sm-6 col-lg-3">
                        <div class="card p-3">
                            <div class="d-flex align-items-center">
                                <span class="stamp stamp-md bg-danger-gradient mr-3">
                                    <i class="far fa-clone grow"></i>
                                </span>
                                <div>
                                    <h5 class="mb-1">
                                        <b>
                                            @user.Projects.Count()
                                            <small>Assigned Projects</small>
                                        </b>
                                    </h5>
                                    <small class="text-muted">@db.Projects.Count() Total Projects</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="TicketCount" class="col-sm-6 col-lg-3">
                        <div class="card p-3">
                            <div class="d-flex align-items-center">
                                <span class="stamp stamp-md bg-secondary-gradient mr-3">
                                    <i class="fas fa-ticket-alt grow"></i>
                                </span>
                                <div>
                                    @if (db.Tickets.Count() != 0)
                                    {
                                        <h5 class="mb-1">

                                            <b>
                                                @if (myRole == "Developer" || myRole == "Demo Developer")
                                                {
                                                    <a href="@Url.Action("Index", "Tickets")">
                                                        @db.Tickets.Where(t => t.AssignedToUserId == user.Id).Where(t => t.TicketStatus.StatusName.Contains("Assigned")).Union(db.Tickets.Where(t => t.AssignedToUserId == user.Id).Where(t => t.TicketStatus.StatusName.Contains("In Progress"))).Count()
                                                        <small>Assigned Tickets</small>
                                                    </a>
                                                }


                                                @if (myRole == "Submitter" || myRole == "Demo Submitter")
                                                {
                                                    <a href="@Url.Action("Index", "Tickets")">
                                                        @db.Tickets.Where(t => t.OwnerUserId == user.Id).Count()
                                                        <small>Tickets created </small>
                                                    </a>
                                                }
                                            </b>
                                        </h5>
                                            if (myRole == "Developer" || myRole == "Demo Developer")
                                            {
                                                <small class="text-muted">
                                                    @db.Tickets.Where(t => t.AssignedToUserId == user.Id).Where(t => t.TicketStatus.StatusName.Contains("Resolved")).Union(db.Tickets.Where(t => t.AssignedToUserId == user.Id).Where(t => t.TicketStatus.StatusName.Contains("Archived"))).Count()
                                                    of @db.Tickets.Where(t => t.AssignedToUserId == user.Id).Count() Tickets completed
                                                </small>
                                            }

                                            if (myRole == "Submitter" || myRole == "Demo Submitter")
                                            {
                                                <small class="text-muted">
                                                    @db.Tickets.Where(t => t.OwnerUserId == user.Id).Where(t => t.TicketStatus.StatusName.Contains("Resolved")).Union(db.Tickets.Where(t => t.OwnerUserId == user.Id).Where(t => t.TicketStatus.StatusName.Contains("Archived"))).Count()
                                                    of @db.Tickets.Where(t => t.OwnerUserId == user.Id).Count() Tickets resolved
                                                </small>
                                            }
                                     }
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>
    </div>

    @if (myRole == "Unregistered")
    {
        <div class="row align-items-center align-self-center">
            <div class="col"></div>
                <div class="col-md-2 ml-auto mr-auto">
                    <img src="~/Images/bug.png" style="width:100px;height:100px;">
                </div>
                <div class="col-4 ml-auto mr-auto">
                    <b>Welcome @user.FullName!</b> <BR>
                    Please be patient, an Admin will assign you a role.
                    <BR>For now you have access to your own Profile, in case you need to make any changes.
                    
                </div>
            <div class="col"></div>
        </div>
    }
    else
    {
        <div class="row justify-content-center">
            <div class="card" style="padding:10px; margin:10px">
                <div class="card-body">
                    <div class="row justify-content-center">
                        <div>
                            <div class="row">
                                <div class="col"><h6 class="text-center">Ticket Priority</h6></div>
                            </div>
                            <div class="row">
                                <div id="tk_priorityChart" style="width:300px; height:200px; position:relative;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>



            <div class="card" style="padding:10px; margin:10px">
                <div class="card-body">
                    <div class="row justify-content-center">
                        <div>
                            <div class="row">
                                <div class="col"><h6 class="text-center">Ticket Status</h6></div>
                            </div>
                            <div class="row">
                                <div id="tk_statusChart" style="width:300px; height:200px; position:relative;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="card" style="padding:10px; margin:10px">
                <div class="card-body">
                    <div class="row justify-content-center">
                        <div>
                            <div class="row">
                                <div class="col"><h6 class="text-center">Ticket Type</h6></div>
                            </div>
                            <div class="row">
                                <div id="tk_typeChart" style="width:300px; height:200px; position:relative;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }



</div>

@section scripts {
    <script src="~/Scripts/raphael-min.js"></script>
    <script src="~/Scripts/morris.min.js"></script>

    <script>
        $(function () {

            var url ='@Url.Action("ProduceChart1Data","Graph")';
            $.post(url).then(function (response) {
                new Morris.Donut({
                    element: 'tk_priorityChart',
                    data: response,
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: ['Ticket Count'],
                    resize: true,
                    colors:['#D1D1D1', '#5d9ccb', '#ffc107', '#ff7f50', '#F40F0F']
                });
            });


            var url ='@Url.Action("ProduceChart2Data","Graph")';
            $.post(url).then(function (response) {
                new Morris.Donut({
                    element: 'tk_statusChart',
                    data: response,
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: ['Ticket Count'],
                    resize: true,
                    colors:['#ff6557', '#52b6d7', '#ffed61', '#35f245', '#b2bcd4']
                });
            });



            var url ='@Url.Action("ProduceChart3Data","Graph")';
            $.post(url).then(function (response) {
                new Morris.Donut({
                    element: 'tk_typeChart',
                    data: response,
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: ['Ticket Count'],
                    resize: true,
                    colors:['#204E83', '#2C69AF', '#589957', '#93BF3B', '#C0DF7C']
                });
            });

        });


    </script>


    @if(myRole == "Demo Admin" || myRole == "Demo Project Manager" || myRole == "Demo Developer"|| myRole == "Demo Submitter")
    { 
    <script>
        $.notify({
            icon: 'fas fa-feather-alt',
            title: 'Welcome @myRole, @user.DisplayName',
            message: 'Feel free to look around!<BR> As a demo user, you are unable to make any changes!',
        }, {
            type: 'warning',
            placement: {
                from: "top",
                align: "center"
            },
            time: 1000000,
        });
    </script>
    }
}
